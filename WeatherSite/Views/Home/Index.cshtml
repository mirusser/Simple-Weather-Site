@using WeatherSite.Models
@using WeatherSite.Controllers
@using WeatherSite.Helpers

@model HomeVM

@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>

<div class="row">
    <div class="col-md-12">
        <form asp-action="@(nameof(HomeController.Index))" asp-controller="@(MvcHelper.NameOfController<HomeController>())">

            <input asp-for="CitiesServiceEndpoint" type="hidden" />

            <div class="form-group">
                <span asp-validation-for="CityId" class="text-danger"></span>
                <label asp-for="CityId" class="control-label"></label>
                <select asp-for="CityId" class="select-city-ajax" style="width:100%">
                </select>
            </div>

            <div class="form-group">
                <input type="submit" value="Get weather" class="btn btn-primary btn-block" />
            </div>
        </form>
    </div>
</div>

@if (Model != null && Model.WeatherForecast != null)
{
    <div class="row">
        <div class="col-md-12">
            <div class="form-group">
                <label class="control-label">@Model.WeatherForecast.Date</label>
                <label class="control-label">@Model.WeatherForecast.Summary</label>
                <label class="control-label">@Model.WeatherForecast.TemperatureC</label>
                <label class="control-label">@Model.WeatherForecast.TemperatureF</label>
            </div>
        </div>
    </div>
}

@section Scripts{
    <script>

        $('.select-city-ajax').select2({
            placeholder: "Select city...",
            allowClear: true,
            language: {
                searching: function () {
                    return "Searching...";
                },
                errorLoading: function () {
                    return "Error...";
                },
                noResults: function () {
                    return "Not found";
                }
            },
            ajax: {
                delay: 550,
                cache: false,
                dataType: 'json',
                url: function (params) {
                    return '@(Model.CitiesServiceEndpoint)' + params.term + '/10';
                },
                processResults: function (data) {
                    console.log(data);

                    var transformedData = $.map(data, function (obj) {

                        obj.id = obj.id;
                        obj.text = obj.text || (obj.name + ' (' + obj.country + ')');
                        return obj;
                    });
                    return {
                        results: transformedData
                    };
                }
            }
        });
    </script>
}
