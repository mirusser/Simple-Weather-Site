version: '3.5'

services:
  mongo:
    image: mongo
    container_name: mongo
    restart: unless-stopped
    ports:
      - 27017:27017
    networks:
      - conveyor
    volumes:
      - mongo:/data/db

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: unless-stopped
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - conveyor

  redis:
    image: redis
    container_name: redis
    restart: unless-stopped
    ports:
      - 6379:6379
    networks:
      - conveyor
    volumes:
      - redis:/data

  seq:
    image: datalust/seq
    container_name: seq
    restart: unless-stopped
    environment:
      - ACCEPT_EULA=Y
    ports:
      - 5341:80
    networks:
      - conveyor

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    user: root
    container_name: sqlserver
    ports:
      - '1434:1433'
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=P@ssword!@#
      - SA_PASSWORD=P@ssword!@#
    volumes:
      - sqlserver:/var/opt/mssql
    networks:
      - conveyor

  # gateway:
  #   image: gateway
  #   container_name: gateway
  #   hostname: gateway
  #   restart: unless-stopped
  #   environment:
  #     - ASPNETCORE_ENVIRONMENT=Docker
  #   ports:
  #     - 8085:80
  #   networks:
  #     - conveyor
  #     - overlaynetwork

  citiesservice:
    image: citiesservice
    container_name: citiesservice
    hostname: citiesservice
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    ports:
      - 8080:80
    networks:
      - conveyor
      - overlaynetwork

  citiesgrpcservice:
    image: citiesgrpcservice
    container_name: citiesgrpcservice
    hostname: citiesgrpcservice
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    ports:
      - 8681:80
    networks:
      - conveyor
      - overlaynetwork

  weatherservice:
    image: weatherservice
    container_name: weatherservice
    hostname: weatherservice
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    ports:
      - 8082:80
    networks:
      - conveyor
      - overlaynetwork

  weatherhistoryservice:
    image: weatherhistoryservice
    container_name: weatherhistoryservice
    hostname: weatherhistoryservice
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    ports:
      - 8083:80
    networks:
      - conveyor
      - overlaynetwork

  weathersite:
    image: weathersite
    container_name: weathersite
    hostname: weathersite
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    ports:
      - 8081:80
    networks:
      - conveyor
      - overlaynetwork

  iconservice:
    image: iconservice
    container_name: iconservice
    hostname: iconservice
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    ports:
      - 8887:80
    volumes:
      - iconservice:/var/lib/iconservicefiles
    networks:
      - conveyor
      - overlaynetwork

  signalrserver:
    image: signalrserver
    container_name: signalrserver
    hostname: signalrserver
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    ports:
      - 8897:80
    networks:
      - conveyor
      - overlaynetwork

  emailservice:
    image: emailservice
    container_name: emailservice
    hostname: emailservice
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    ports:
      - 8087:80
    networks:
      - conveyor
      - overlaynetwork

networks:
  conveyor:
    name: conveyor-network
  overlaynetwork:
    name: overlaynetwork
    external: true

volumes:
  mongo:
    driver: local
  sqlserver:
    driver: local
  redis:
    driver: local
  iconservice:
    driver: local
