version: '3.8'

services:
  oauthserver:
    image: oauthserver
    container_name: oauthserver
    hostname: oauthserver
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_Kestrel__Certificates__Default__Password=zaq1@WSX
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/localhost.pfx
    ports:
      - 8079:443
      - 8080:80
    volumes:
      - ./localhost.pfx:/https/localhost.pfx  # Mount the .pfx file into the container
    networks:
      - default
      - overlaynetwork

  citiesservice:
    image: citiesservice
    container_name: citiesservice
    hostname: citiesservice
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    ports:
      - 8081:80
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:80/health']
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      - default
      - overlaynetwork

  citiesgrpcservice:
    image: citiesgrpcservice
    container_name: citiesgrpcservice
    hostname: citiesgrpcservice
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    ports:
      - 8681:80
    networks:
      - default
      - overlaynetwork

  weatherservice:
    image: weatherservice
    container_name: weatherservice
    hostname: weatherservice
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    ports:
      - 8082:80
    networks:
      - default
      - overlaynetwork

  weatherhistoryservice:
    image: weatherhistoryservice
    container_name: weatherhistoryservice
    hostname: weatherhistoryservice
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    ports:
      - 8083:80
    networks:
      - default
      - overlaynetwork

  weathersite:
    image: weathersite
    container_name: weathersite
    hostname: weathersite
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    ports:
      - 8084:80
    networks:
      - default
      - overlaynetwork

  iconservice:
    image: iconservice
    container_name: iconservice
    hostname: iconservice
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    ports:
      - 8887:80
    volumes:
      - iconservice:/var/lib/iconservicefiles
    networks:
      - default
      - overlaynetwork

  signalrserver:
    image: signalrserver
    container_name: signalrserver
    hostname: signalrserver
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    ports:
      - 8897:80
    networks:
      - default
      - overlaynetwork

  emailservice:
    image: emailservice
    container_name: emailservice
    hostname: emailservice
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    ports:
      - 8087:80
    networks:
      - default
      - overlaynetwork

  hangfireservice:
    image: hangfireservice
    container_name: hangfireservice
    hostname: hangfireservice
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    ports:
      - 8089:80
    networks:
      - default
      - overlaynetwork

networks:
  default:
    driver: bridge
  overlaynetwork:
    name: overlaynetwork
    external: true

volumes:
  iconservice:
    driver: local
